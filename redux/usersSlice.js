import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';
import { doc, setDoc } from 'firebase/firestore';
import { db } from '../firebase/client';

// createAsyncThunk documentation: https://redux-toolkit.js.org/api/createAsyncThunk

// createAsyncThunk accepts three parameters: a string action type value, a payloadCreator callback, and an options object.
export const getUsers = createAsyncThunk(
  // This is the action type, more info: https://redux-toolkit.js.org/api/createAsyncThunk#type
  'users/getUsers',
  async (dispatch, getState) => {
    // This is the payload creator, it must be a callback function that should return a promise
    // containing the result of some asynchronous logic. It may also return a value synchronously.
    // More info: https://redux-toolkit.js.org/api/createAsyncThunk#payloadcreator

    // createAsyncThunk returns a standard Redux thunk action creator which then is handled on the extraReducers field of the slice.
    // More info: https://redux-toolkit.js.org/api/createAsyncThunk#return-value
    return await fetch('https://jsonplaceholder.typicode.com/users').then((res) => res.json());
  },
);

const usersSlice = createSlice({
  name: 'user',
  initialState: {
    users: [],
    loading: 'idle',
  },
  extraReducers: {
    [getUsers.pending]: (state, action) => {
      state.loading = 'pending';
    },
    [getUsers.fulfilled]: (state, action) => {
      state.loading = 'succeeded';
      state.users = action.payload;
      // This works but you might want to create your own thunk to handle the creation of db documents
      action.payload.forEach(async (user) => await _createTestUser(user));
    },
    [getUsers.rejected]: (state, action) => {
      state.loading = 'failed';
    },
  },
});

export default usersSlice.reducer;

// Add a new document in collection "demoUsers"
const _createTestUser = async (user) => {
  // setDoc gives you control of documents id, if you want autogenerated id's see addDoc https://firebase.google.com/docs/firestore/manage-data/add-data#web-version-9
  await setDoc(doc(db, 'demoUsers', String(user.id)), user);
};
